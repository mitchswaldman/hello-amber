$(function(){
	var audio = new Howl({
		urls: ['assets/in_my_life.mp3'],
		onplay: function(){
			beginSlideShow();
		}
	});

	var touched = false;
	var width = window.innerWidth,
	    height = window.innerHeight;
	var duration = 3;
	var memoryDuration = 9;
	var rollInSpeed = .5;
	var shapeMorphTime = .5;
	var shapeHoldTime = "+="+ (memoryDuration);
	var phrases = ["Hello, Amber.",
					"This is a love letter.",
					"An e-love letter.",
					"Soon, you'll start an adventure.",
					"One that I can't be a part of.",
					"So, I wanted to create a place",
					"that you can always get to,",
					"no matter where you are,",
					"a place to jog your memory.",
					"Let the feelings commence!",
					"Actually, hold on one second.",
					"I don't know where you are at this moment.",
					"I don't know what you're doing.",
					"I don't even know how old you are.",
					"But I know that I hurt you once.",
					"And I'll never be able to take it back.",
					"So I just want to let you know...",
					"You are amazing.",
					"You are beautiful.",
					"You are funny and warm.",
					"And boy did I screw up.",
					"But wherever you are at this moment,",
					"I hope this message finds you happy and well,",
					"And I hope life has been as good to you as you are to it.",
					"I will always love you. I'm sorry that I didn't show that all the time."
					"Now back to our regular scheduled programming..."];

	var memories = ["First Date",
					"The apartment",
					"Forts",
					"Watching the blood moon",
					"Dancing to Mickey and Sylvia",
					"Venice",
					"Train rides in Germany",
					"The elevator in Amsterdam",
					"Hot trash in New York",
					"Flying with Jason",
					"Star Wars",
					"Camping out for First City",
					"Fallout 4",
					"I love you, Amber"];
	var textModels = _.map(phrases, function(phrase){
		return new TextModel(phrase, duration);
	});
	
	$("svg").attr('width', Math.min(width, height)/3);
	$("svg").attr('height', Math.min(width, height)/3);
	var tl = new TimelineLite({paused:true});
	

	//NOTE: Put the name of the next shape in the morphSVG item.
	function addFirstDate(tl){
		return tl.addLabel("firstDate", 1)
		.to("#start", shapeMorphTime, {morphSVG: {shape: "#apartment", precompile:["M93.99999999999999,275.49999999999994 C93.99,275.48 93.99,275.47 93.99,275.46 93.99,275.45 93.99,275.44 93.99,275.43 93.99,275.42 93.99,275.41 93.99,275.39 93.99,267.2 95.52,261.64 98.29,257.88 101.06,254.11 105.08,252.14 110.07,251.11 115.06,250.08 121.03,250 127.69,250 127.36,250 127.03,250 126.69,250 126.36,250 126.03,250 125.69,250 132.36,250 138.36,250.08 143.4,251.12 148.44,252.15 152.51,254.13 155.32,257.91 158.14,261.68 159.69,267.26 159.69,275.5 159.81,275.48 159.92,275.47 160.03,275.46 160.14,275.45 160.25,275.44 160.36,275.43 160.47,275.42 160.58,275.41 160.69,275.39 160.69,263.1 164.2,256.75 170.2,253.47 176.2,250.2 184.7,250 194.7,250 194.47,250 194.25,250 194.03,250 193.81,250 193.58,250 193.36,250 193.14,250 192.92,250 192.7,250 199.36,250 205.4,250.08 210.48,251.12 215.56,252.15 219.69,254.13 222.55,257.91 225.41,261.68 227,267.26 227,275.5 227,275.48 227,275.46 227,275.45 227,275.43 227,275.41 227,275.39 227,267.2 228.52,261.64 231.29,257.88 234.06,254.11 238.08,252.14 243.07,251.11 248.06,250.08 254.03,250 260.7,250 260.47,250 260.25,250 260.03,250 259.81,250 259.58,250 259.36,250 259.14,250 258.92,250 258.7,250 268.7,250 277.27,250.2 283.35,253.48 289.42,256.77 293,263.14 293,275.5 293,275.48 293,275.47 293,275.46 293,275.45 293,275.44 293,275.43 293,275.42 293,275.41 293,275.39 293,267.2 294.52,261.64 297.29,257.88 300.06,254.11 304.08,252.14 309.07,251.11 314.06,250.08 320.03,250 326.7,250 326.36,250 326.03,250 325.7,250 325.36,250 325.03,250 324.7,250 331.36,250 337.4,250.08 342.48,251.12 347.56,252.15 351.69,254.13 354.55,257.91 357.41,261.68 359,267.26 359,275.5 359,275.41 359,275.33 359,275.25 359,275.16 359,275.08 359,275 359,275 359,275 359,275 359,237.5 359,200 359,162.5 359,125 359,87.5 359,50 322.22,50 285.44,50 248.66,50 211.88,50 175.11,50 138.33,50 101.55,50 64.77,50 27.99,50 27.99,87.56 27.99,125.13 27.99,162.69 27.99,200.26 27.99,237.83 27.99,275.39 27.99,267.19 29.52,261.64 32.29,257.88 35.06,254.11 39.08,252.14 44.07,251.11 49.06,250.08 55.03,249.99 61.69,249.99 61.47,249.99 61.25,249.99 61.03,249.99 60.81,249.99 60.58,249.99 60.36,249.99 60.14,249.99 59.92,249.99 59.69,249.99 69.69,249.99 78.27,250.19 84.35,253.48 90.42,256.77 93.99,263.14 93.99,275.49 ","M98,353 C98,349 98,345 98,341 105.33,341 112.66,341 120,341 119,341 118,341 117,341 117,337 117,333 117,329 124.33,329 131.66,329 139,329 138,329 137,329 136,329 136,325 136,321 136,317 143.33,317 150.66,317 158,317 157,317 156,317 155,317 155,313 155,309 155,305 162.33,305 169.66,305 177,305 176,305 175,305 174,305 174,301 174,297 174,293 181.33,293 188.66,293 196,293 195,293 194,293 193,293 193,289 193,285 193,281 200.33,281 207.66,281 215,281 214,281 213,281 212,281 212,277 212,273 212,269 219.33,269 226.66,269 234,269 233,269 232,269 231,269 231,265 231,261 231,257 238.33,257 245.66,257 253,257 252,257 251,257 250,257 250,253 250,249 250,245 257.33,245 264.66,245 272,245 271,245 270,245 269,245 269,241 269,237 269,233 276.33,233 283.66,233 291,233 290,233 289,233 288,233 288,229 288,225 288,221 295.33,221 302.66,221 310,221 309,221 308,221 307,221 307,217 307,213 307,209 314.33,209 321.66,209 329,209 224.33,209 119.66,209 15,209 15,195 15,181 15,167 50,167 85,167 120,167 120,181 120,195 120,209 120,172 120,135 120,98 104.33,98 88.66,98 73,98 88.66,73.33 104.33,48.66 120,24 187.66,24 255.33,24 323,24 343.66,24 364.33,24 385,24 385,85.66 385,147.33 385,209 344.33,209 303.66,209 263,209 263,183.33 263,157.66 263,132 280,132 297,132 314,132 314,157 314,182 314,207 243.66,207.66 173.33,208.33 103,209 103,195 103,181 103,167 98,167 93,167 88,167 88,181 88,195 88,209 83,209 78,209 73,209 73,195 73,181 73,167 68,167 63,167 58,167 58,181 58,195 58,209 53.33,209 48.66,209 44,209 44,195 44,181 44,167 39,167 34,167 29,167 29,181 29,195 29,209 "]}}, "firstDate"+ shapeHoldTime)
		.fromTo("#start1", shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"firstDate")
		.fromTo("#start2", shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"firstDate");
	}

	function addApartment(tl) {
		var rooftopBuffer = .5;
		return tl.addLabel("apartment", "firstDate"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#fort", precompile:["M29,209 C29,195 29,181 29,167 34,167 39,167 44,167 44,181 44,195 44,209 48.66,209 53.33,209 58,209 58,195 58,181 58,167 63,167 68,167 73,167 73,181 73,195 73,209 78,209 83,209 88,209 88,195 88,181 88,167 93,167 98,167 103,167 103,181 103,195 103,209 173.33,208.33 243.66,207.66 314,207 314,182 314,157 314,132 297,132 280,132 263,132 263,157.66 263,183.33 263,209 303.66,209 344.33,209 385,209 385,147.33 385,85.66 385,24 364.33,24 343.66,24 323,24 255.33,24 187.66,24 120,24 104.33,48.66 88.66,73.33 73,98 88.66,98 104.33,98 120,98 120,135 120,172 120,209 120,195 120,181 120,167 85,167 50,167 15,167 15,181 15,195 15,209 119.66,209 224.33,209 329,209 321.66,209 314.33,209 307,209 307,213 307,217 307,221 308,221 309,221 310,221 302.66,221 295.33,221 288,221 288,225 288,229 288,233 289,233 290,233 291,233 283.66,233 276.33,233 269,233 269,237 269,241 269,245 270,245 271,245 272,245 264.66,245 257.33,245 250,245 250,249 250,253 250,257 251,257 252,257 253,257 245.66,257 238.33,257 231,257 231,261 231,265 231,269 232,269 233,269 234,269 226.66,269 219.33,269 212,269 212,273 212,277 212,281 213,281 214,281 215,281 207.66,281 200.33,281 193,281 193,285 193,289 193,293 194,293 195,293 196,293 188.66,293 181.33,293 174,293 174,297 174,301 174,305 175,305 176,305 177,305 169.66,305 162.33,305 155,305 155,309 155,313 155,317 156,317 157,317 158,317 150.66,317 143.33,317 136,317 136,321 136,325 136,329 137,329 138,329 139,329 131.66,329 124.33,329 117,329 117,333 117,337 117,341 118,341 119,341 120,341 112.66,341 105.33,341 98,341 98,345 98,349 98,353 ","M4.5,299.5 C7.41,297.16 10,294.2 12.36,290.81 14.72,287.41 16.86,283.57 18.88,279.48 20.91,275.38 22.83,271.04 24.75,266.62 26.66,262.2 28.58,257.72 30.61,253.35 32.63,248.98 34.77,244.72 37.13,240.77 39.5,236.81 42.08,233.16 45,230 47.5,227.28 50.42,224.53 53.61,221.8 56.79,219.07 60.23,216.37 63.75,213.76 67.27,211.15 70.87,208.63 74.38,206.27 77.89,203.92 81.31,201.72 84.46,199.76 87.62,197.79 90.51,196.05 92.95,194.6 95.4,193.16 97.41,192 98.81,191.21 100.21,190.42 101,190 101,190 104.92,186.57 108.38,183.11 111.46,179.67 114.53,176.23 117.23,172.81 119.62,169.45 122.02,166.1 124.11,162.82 126,159.65 127.89,156.48 129.56,153.44 131.11,150.55 132.66,147.67 134.09,144.96 135.47,142.47 136.86,139.97 138.2,137.69 139.59,135.68 140.98,133.67 142.42,131.92 144,130.5 145.57,129.07 147.26,127.72 149.03,126.44 150.8,125.16 152.65,123.95 154.53,122.79 156.41,121.63 158.32,120.52 160.22,119.45 162.12,118.38 164.01,117.35 165.84,116.34 167.67,115.33 169.44,114.34 171.1,113.37 172.77,112.39 174.33,111.42 175.74,110.45 177.16,109.47 178.42,108.5 179.5,107.5 180.75,106.33 181.75,105.02 182.63,103.65 183.51,102.29 184.28,100.86 185.07,99.44 185.86,98.02 186.66,96.62 187.62,95.31 188.58,94 189.69,92.77 191.09,91.72 192.49,90.66 194.17,89.77 196.28,89.13 198.38,88.48 200.91,88.08 204,88 206.64,87.92 209.14,88.5 211.56,89.57 213.97,90.65 216.31,92.23 218.63,94.17 220.94,96.12 223.24,98.43 225.58,100.97 227.91,103.51 230.29,106.28 232.77,109.13 235.25,111.99 237.83,114.93 240.58,117.83 243.32,120.72 246.23,123.57 249.36,126.23 252.49,128.88 255.85,131.35 259.5,133.5 263.14,135.64 266.57,138.78 269.79,142.62 273.01,146.47 276.02,151.01 278.83,155.95 281.65,160.9 284.26,166.24 286.68,171.69 289.09,177.13 291.32,182.68 293.35,188.03 295.39,193.38 297.24,198.52 298.9,203.17 300.57,207.82 302.06,211.98 303.37,215.33 304.68,218.68 305.82,221.24 306.8,222.7 307.77,224.15 309.32,225.6 311.29,227.03 313.26,228.46 315.63,229.88 318.25,231.29 320.87,232.7 323.73,234.1 326.65,235.48 329.58,236.86 332.57,238.23 335.46,239.59 338.35,240.95 341.13,242.3 343.64,243.63 346.15,244.97 348.38,246.29 350.16,247.6 351.95,248.91 353.28,250.21 354,251.5 354.83,253 356.25,255.18 358.03,257.77 359.81,260.36 361.96,263.37 364.25,266.51 366.55,269.66 369,272.95 371.37,276.12 373.75,279.29 376.05,282.33 378.07,284.98 380.09,287.62 381.82,289.88 383.05,291.47 384.27,293.06 385,294 385,294 385,294 385,294 385,294 "]}}, "apartment"+shapeHoldTime)
			     .fromTo("#doorknob",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"apartment+=.5")
			     .fromTo(".roof",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"apartment+="+rooftopBuffer);
	}

	function addFort(tl){

		return tl.addLabel("fort", "apartment"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#moon", precompile:["M4.5,299.5 C22,285.5 27.5,249 45,230 62.5,211 101,190 101,190 128.5,166 133,140.5 144,130.5 155,120.5 172,114.5 179.5,107.5 187,100.5 185.5,88.5 204,88 222.5,87.5 234,118.5 259.5,133.5 285,148.5 300,212.5 306.8,222.7 313.6,232.89 349,242.5 354,251.5 359,260.5 385,294 385,294 ","M340,164.5 C340,203.15 324.32,238.15 298.99,263.49 273.65,288.82 238.65,304.5 200,304.5 161.34,304.5 126.34,288.82 101,263.49 75.67,238.15 60,203.15 60,164.5 60,125.84 75.67,90.84 101,65.5 126.34,40.17 161.34,24.5 200,24.5 225.77,24.5 249.91,31.46 270.66,43.61 291.4,55.76 308.73,73.09 320.88,93.83 333.03,114.58 340,138.72 340,164.5 "]}}, "fort"+shapeHoldTime)
			     .fromTo("#hook",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"fort")
			     .fromTo(".chair",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime , yoyo: true},
									"fort")
			     .fromTo(".tv",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime , yoyo: true},
									"fort");
	}

	function addMoon(tl) {
		return tl.addLabel("moon", "fort"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape: "#dancing", precompile:["M177.29127281074938,26.33236364563882 C184.68,25.12 192.26,24.5 200,24.5 207.02,24.5 213.93,25.01 220.68,26.01 227.43,27.01 234.03,28.49 240.43,30.42 246.83,32.35 253.04,34.72 259.02,37.51 264.99,40.29 270.74,43.48 276.23,47.05 281.71,50.62 286.93,54.56 291.85,58.83 296.76,63.11 301.38,67.73 305.66,72.64 309.93,77.56 313.87,82.78 317.44,88.26 321.01,93.75 324.2,99.5 326.98,105.47 329.77,111.45 332.14,117.66 334.07,124.06 336,130.46 337.48,137.06 338.48,143.81 339.48,150.56 340,157.47 340,164.5 340,172.23 339.37,179.81 338.16,187.2 336.96,194.59 335.17,201.79 332.86,208.75 330.54,215.7 327.7,222.41 324.37,228.83 321.04,235.25 317.23,241.39 312.98,247.18 308.74,252.97 304.06,258.42 298.99,263.49 293.92,268.56 288.47,273.24 282.68,277.48 276.89,281.73 270.75,285.54 264.33,288.87 257.91,292.2 251.2,295.04 244.25,297.36 237.29,299.67 230.09,301.46 222.7,302.66 215.31,303.87 207.73,304.5 200,304.5 192.97,304.5 186.06,303.98 179.31,302.98 172.56,301.98 165.96,300.5 159.56,298.57 153.16,296.64 146.95,294.27 140.97,291.48 135,288.7 129.25,285.51 123.76,281.94 118.28,278.37 113.06,274.43 108.14,270.16 103.23,265.88 98.61,261.26 94.33,256.35 90.06,251.43 86.12,246.21 82.55,240.73 78.98,235.24 75.79,229.49 73.01,223.52 70.22,217.54 67.85,211.33 65.92,204.93 63.99,198.53 62.51,191.93 61.51,185.18 60.51,178.43 60,171.52 60,164.5 60,156.76 60.62,149.18 61.83,141.79 63.03,134.4 64.82,127.2 67.13,120.24 69.45,113.29 72.29,106.58 75.62,100.16 78.95,93.74 82.76,87.6 87.01,81.81 91.25,76.02 95.93,70.57 101,65.5 106.07,60.43 111.52,55.75 117.31,51.51 123.1,47.26 129.24,43.45 135.66,40.12 142.08,36.79 148.79,33.95 155.74,31.63 162.7,29.32 169.9,27.53 177.29,26.33 ","M351.2,182 C351.5,194.3 350.7,208.3 343.5,211.2 336.2,214.2 326.89,204 307.39,187.5 277,161.8 245.59,141.3 239.89,146.5 238.89,147.4 237.39,154.4 237.39,168.5 237.39,168.5 237.39,169 237.39,169 238.39,169 235.49,150.6 240.39,146.5 245.49,142.19 262.89,149.9 306.59,187 306.39,177.5 306.29,168.1 305.99,158.6 305.99,158.6 267.19,151.5 260.59,136 262.39,136 276.89,139.5 281.79,133 291.79,115 298.29,100 312.29,105.5 326.29,111 320.29,126 320.29,139 320.29,149.69 336.6,154.3 336.19,157 335.99,158.1 334.39,158.3 333.29,158.5 323.69,160.3 311.49,159.1 305.79,158.4 311.49,187.4 304.49,213.1 287.79,222.7 284.39,224.6 279.49,226.6 272.69,226.89 165.19,207.8 185.19,311 188.69,265 192.19,219 241.19,224 278.19,228 278.19,228 228.19,260.5 228.19,303.5 206.46,303.5 184.73,303.5 163,303.5 184.66,303.5 206.33,303.5 228,303.5 259,303.5 290,303.5 321,303.5 221.66,303.5 122.33,303.5 23,303.5 33.7,303.5 44.6,303.1 55.5,303.1 69.09,303.1 82.6,302.7 96,302.5 86.2,318.1 83.8,321.3 83.5,321.1 82.6,320.6 118.1,280.6 108.3,245.2 103.8,228.8 90.4,218.7 80,207.5 168.5,220.5 163.5,302.5 163.5,302.5 163.5,302.5 161.9,223.4 89.5,209.2 17,195 114,108 139.5,101.5 139.5,101.5 148.5,116.5 167,112.5 185.5,108.5 195.5,94.5 192,82.5 188.5,70.5 176,63.5 160,68 144,72.5 134.1,88.4 138.5,97 142.9,105.6 135.3,103 135.3,103 125.56,109.63 115.83,116.26 106.1,122.9 106.1,122.9 117.5,177.5 172,158.5 201.5,145.5 126.3,191.5 106.9,125.7 87.5,60 20.6,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 "]}}, "moon"+shapeHoldTime)
			     .fromTo(".crater",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 0% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime , yoyo: true},
									"moon")
			     .fromTo(".moon_head",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime , yoyo: true},
									"moon");
	}

	function addDancing(tl) {
		return tl.addLabel("dancing", "moon"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#venice", precompile:["M20.5,102.5 C20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.5,102.5 20.55,102.5 37.29,91.87 56.46,89.46 75.62,87.05 97.2,92.85 106.9,125.7 113.36,147.63 126.03,157.14 138.95,160.55 151.87,163.97 165.05,161.29 172.54,158.84 180.03,156.38 181.83,154.16 172,158.5 144.75,168 128.27,159.1 118.61,147.82 108.95,136.55 106.1,122.9 106.1,122.9 109.34,120.68 112.58,118.47 115.83,116.26 119.07,114.05 122.32,111.84 125.56,109.63 128.81,107.42 132.05,105.21 135.3,103 135.3,103 137.2,103.65 138.55,103.22 139.9,102.8 140.69,101.3 138.5,97 137.03,94.13 137.15,90.45 138.56,86.65 139.97,82.86 142.66,78.94 146.33,75.6 150.01,72.26 154.66,69.5 160,68 168,65.75 175.12,66.37 180.68,69.06 186.25,71.75 190.25,76.5 192,82.5 193.16,86.5 192.83,90.72 191.18,94.72 189.53,98.72 186.57,102.5 182.48,105.61 178.38,108.72 173.16,111.16 167,112.5 157.75,114.5 150.87,111.75 146.31,108.5 141.75,105.25 139.5,101.5 139.5,101.5 126.75,104.75 96.12,128.12 77.75,152.46 59.37,176.8 53.25,202.1 89.5,209.2 113.63,213.93 129.9,225.87 140.86,239.7 151.82,253.52 157.48,269.22 160.4,281.46 163.32,293.71 163.5,302.5 163.5,302.5 163.5,302.5 164.75,282 154.93,259.87 145.12,237.75 124.25,214 80,207.5 83.46,211.23 87.26,214.84 90.95,218.6 94.65,222.37 98.23,226.28 101.27,230.62 104.31,234.96 106.8,239.73 108.3,245.2 113.19,262.9 106.77,281.75 99.23,296.23 91.69,310.72 83.05,320.85 83.5,321.1 83.6,321.16 83.93,320.85 84.69,319.83 85.45,318.81 86.65,317.07 88.47,314.3 90.28,311.52 92.73,307.7 96,302.5 89.3,302.6 82.57,302.75 75.82,302.87 69.07,303 62.3,303.1 55.5,303.1 51.86,303.1 48.23,303.14 44.6,303.2 40.98,303.26 37.36,303.33 33.75,303.39 30.15,303.45 26.56,303.5 23,303.5 72.66,303.5 122.33,303.5 172,303.5 221.66,303.5 271.33,303.5 321,303.5 310.66,303.5 300.33,303.5 290,303.5 279.66,303.5 269.33,303.5 259,303.5 248.66,303.5 238.33,303.5 228,303.5 217.16,303.5 206.33,303.5 195.5,303.5 184.66,303.5 173.83,303.5 163,303.5 173.86,303.5 184.73,303.5 195.59,303.5 206.46,303.5 217.33,303.5 228.19,303.5 228.19,289.16 233.75,276 241.16,264.81 248.57,253.62 257.82,244.42 265.23,238.01 272.64,231.61 278.19,228 278.19,228 259.69,226 238.19,223.75 220.88,227.75 203.57,231.75 190.44,242 188.69,265 187.53,280.33 184.53,279.08 185.03,271.32 185.53,263.55 189.53,249.26 202.36,238.51 215.19,227.75 236.86,220.53 272.69,226.89 276.09,226.75 279.02,226.17 281.52,225.4 284.02,224.62 286.09,223.64 287.79,222.7 293.36,219.5 297.85,214.51 301.15,208.2 304.45,201.9 306.56,194.28 307.37,185.82 308.18,177.36 307.69,168.06 305.79,158.4 308.64,158.75 313.12,159.22 318.08,159.38 323.04,159.55 328.49,159.4 333.29,158.5 333.66,158.43 334.08,158.36 334.49,158.26 334.9,158.16 335.29,158.03 335.6,157.83 335.91,157.63 336.13,157.36 336.19,157 336.4,155.65 332.42,153.82 328.4,151 324.37,148.17 320.29,144.35 320.29,139 320.29,134.66 320.96,130.11 321.33,125.75 321.7,121.4 321.78,117.25 320.59,113.74 319.41,110.22 316.96,107.33 312.29,105.5 305.29,102.75 300.17,105.12 295.54,110.43 290.92,115.75 286.79,124 281.79,133 279.34,136.25 274.5,137 270.03,136.93 265.57,136.87 261.5,136 260.59,136 262.79,141.16 268.57,145.4 275.3,148.74 282.02,152.09 289.7,154.55 295.69,156.18 301.68,157.81 305.99,158.6 305.99,158.6 306.14,163.35 306.25,168.07 306.33,172.8 306.42,177.52 306.5,182.25 306.59,187 292.03,174.63 280.38,165.53 271.14,159.05 261.9,152.57 255.07,148.72 250.11,146.84 245.16,144.96 242.09,145.06 240.39,146.5 237.95,148.55 237.45,154.17 237.43,159.28 237.42,164.4 237.89,169 237.39,169 237.39,169 237.39,168.94 237.39,168.87 237.39,168.79 237.39,168.7 237.39,168.62 237.39,168.55 237.39,168.5 237.39,168.5 237.39,161.44 237.77,156.17 238.27,152.55 238.77,148.92 239.39,146.94 239.89,146.5 241.79,144.76 246.55,145.88 253.17,149.1 259.79,152.32 268.28,157.64 277.65,164.29 287.02,170.94 297.26,178.93 307.39,187.5 317.14,195.75 324.34,202.42 330.02,206.66 335.7,210.89 339.85,212.7 343.5,211.2 347.1,209.75 349.1,205.52 350.16,200.12 351.22,194.72 351.35,188.15 351.2,182 ","M128,41.5 C107.23,41.5 86.46,41.5 65.7,41.5 61.7,49.4 57.7,57.3 53.7,65.2 83.46,66.23 113.23,67.26 143,68.3 140.33,59.2 137.66,50.09 135,41 144.33,45 153.66,49 163,53 166.76,62.56 170.53,72.13 174.3,81.7 187.03,84.8 199.76,87.9 212.5,91 212.5,120.56 212.5,150.13 212.5,179.7 197.83,186.46 183.16,193.23 168.5,200 168.5,185.9 168.5,171.8 168.5,157.69 166.5,157.79 164.5,157.9 162.5,158 162.5,165.9 162.5,173.8 162.5,181.7 158.26,182.56 154.03,183.43 149.8,184.3 149.53,167.86 149.26,151.43 149,135 153.83,135.33 158.66,135.66 163.5,136 163.5,141.16 163.5,146.33 163.5,151.5 165.5,151.5 167.5,151.5 169.5,151.5 169.5,137.56 169.5,123.63 169.5,109.7 167.5,109.13 165.5,108.56 163.5,108 163.5,114.1 163.5,120.2 163.5,126.3 158.5,126.86 153.5,127.43 148.5,128 148.5,112.33 148.5,96.66 148.5,81 153.46,83 158.43,85 163.4,87 163.7,91.43 164,95.86 164.3,100.3 166.36,100.86 168.43,101.43 170.5,102 170.5,95.66 170.5,89.33 170.5,83 161.83,79.66 153.16,76.33 144.5,73 144.5,118.1 144.5,163.19 144.5,208.3 141.16,210.2 137.83,212.1 134.5,214 134.5,166.56 134.5,119.13 134.5,71.7 111.83,71.13 89.16,70.56 66.5,70 66.5,120.56 66.5,171.13 66.5,221.7 88.6,222.13 110.7,222.56 132.8,223 138.03,220.33 143.26,217.66 148.5,215 148.5,217.9 148.5,220.8 148.5,223.7 154.16,221.13 159.83,218.56 165.5,216 165.5,213.9 165.5,211.8 165.5,209.7 172.5,206.46 179.5,203.23 186.5,200 186.5,203.23 186.5,206.46 186.5,209.7 192.16,207.8 197.83,205.9 203.5,204 203.5,201.5 203.5,199 203.5,196.5 209.5,196.5 215.5,196.5 221.5,196.5 221.5,199.16 221.5,201.83 221.5,204.5 226.16,204.5 230.83,204.5 235.5,204.5 235.5,202.16 235.5,199.83 235.5,197.5 241.5,197.5 247.5,197.5 253.5,197.5 253.5,200.16 253.5,202.83 253.5,205.5 257.16,205.5 260.83,205.5 264.5,205.5 264.5,202.5 264.5,199.5 264.5,196.5 269.16,196.5 273.83,196.5 278.5,196.5 278.5,200 278.5,203.5 278.5,207 282.83,210.33 287.16,213.66 291.5,217 291.5,212.33 291.5,207.66 291.5,203 295.83,206 300.16,209 304.5,212 304.5,217.43 304.5,222.86 304.5,228.3 308.5,230.86 312.5,233.43 316.5,236 316.5,230.56 316.5,225.13 316.5,219.7 323.83,225.13 331.16,230.56 338.5,236 338.5,240.63 338.5,245.26 338.5,249.9 335.03,249.83 331.56,249.76 328.1,249.7 327.4,251.3 326.7,252.9 326,254.5 338.76,254.5 351.53,254.5 364.3,254.5 365.86,261.5 367.43,268.5 369,275.5 350.1,275.5 331.2,275.5 312.3,275.5 311.2,277.5 310.1,279.5 309,281.5 330.33,281.5 351.66,281.5 373,281.5 375.9,291.2 378.8,300.9 381.7,310.6 349.23,310.06 316.76,309.53 284.3,309 297.86,289.23 311.43,269.46 325,249.7 340.1,249.9 355.2,250.1 370.3,250.3 384.96,303.43 399.63,356.56 414.3,409.7 344.76,408.56 275.23,407.43 205.7,406.3 243.9,353.86 282.1,301.43 320.3,249 304.53,239.5 288.76,230 273,220.5 250.1,220.5 227.2,220.5 204.3,220.5 183.43,228.73 162.56,236.96 141.69,245.2 89.69,289.8 37.69,334.4 -14.3,379 -10.96,347 -7.63,315 -4.3,283 18.29,267.66 40.9,252.33 63.5,237 63.5,181.66 63.5,126.33 63.5,71 49.16,68.66 34.83,66.33 20.5,64 20.5,67.33 20.5,70.66 20.5,74 15.5,73.23 10.5,72.46 5.5,71.7 5.5,86.13 5.5,100.56 5.5,115 13.83,113.66 22.16,112.33 30.5,111 30.5,105 30.5,99 30.5,93 30.5,87.33 30.5,81.66 30.5,76 28.2,75.43 25.9,74.86 23.6,74.3 7.56,72.96 -8.46,71.63 -24.5,70.3 -24.5,188.53 -24.5,306.76 -24.5,425 139.1,422.33 302.7,419.66 466.3,417 455.63,295.43 444.96,173.86 434.3,52.3 406.3,52.53 378.3,52.76 350.3,53 350.56,85.9 350.83,118.8 351.1,151.69 344.9,154.36 338.7,157.03 332.5,159.69 332.5,168.8 332.5,177.9 332.5,187 338.5,186.76 344.5,186.53 350.5,186.3 350.5,206.36 350.5,226.43 350.5,246.5 371,246.5 391.5,246.5 412,246.5 412.1,166.5 412.2,86.5 412.3,6.5 406.2,6.5 400.1,6.5 394,6.5 379.23,20.43 364.46,34.36 349.7,48.3 369.03,48.1 388.36,47.9 407.7,47.7 "]}}, 
			     	"dancing"+shapeHoldTime)
	}

	function addVenice(tl){
		var rooftopBuffer = .5;
		return tl.addLabel("venice", "dancing"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#train", precompile:["M128,41.5 C107.23,41.5 86.46,41.5 65.7,41.5 61.7,49.4 57.7,57.3 53.7,65.2 83.46,66.23 113.23,67.26 143,68.3 140.33,59.2 137.66,50.09 135,41 144.33,45 153.66,49 163,53 166.76,62.56 170.53,72.13 174.3,81.7 187.03,84.8 199.76,87.9 212.5,91 212.5,120.56 212.5,150.13 212.5,179.7 197.83,186.46 183.16,193.23 168.5,200 168.5,185.9 168.5,171.8 168.5,157.69 166.5,157.79 164.5,157.9 162.5,158 162.5,165.9 162.5,173.8 162.5,181.7 158.26,182.56 154.03,183.43 149.8,184.3 149.53,167.86 149.26,151.43 149,135 153.83,135.33 158.66,135.66 163.5,136 163.5,141.16 163.5,146.33 163.5,151.5 165.5,151.5 167.5,151.5 169.5,151.5 169.5,137.56 169.5,123.63 169.5,109.7 167.5,109.13 165.5,108.56 163.5,108 163.5,114.1 163.5,120.2 163.5,126.3 158.5,126.86 153.5,127.43 148.5,128 148.5,112.33 148.5,96.66 148.5,81 153.46,83 158.43,85 163.4,87 163.7,91.43 164,95.86 164.3,100.3 166.36,100.86 168.43,101.43 170.5,102 170.5,95.66 170.5,89.33 170.5,83 161.83,79.66 153.16,76.33 144.5,73 144.5,118.1 144.5,163.19 144.5,208.3 141.16,210.2 137.83,212.1 134.5,214 134.5,166.56 134.5,119.13 134.5,71.7 111.83,71.13 89.16,70.56 66.5,70 66.5,120.56 66.5,171.13 66.5,221.7 88.6,222.13 110.7,222.56 132.8,223 138.03,220.33 143.26,217.66 148.5,215 148.5,217.9 148.5,220.8 148.5,223.7 154.16,221.13 159.83,218.56 165.5,216 165.5,213.9 165.5,211.8 165.5,209.7 172.5,206.46 179.5,203.23 186.5,200 186.5,203.23 186.5,206.46 186.5,209.7 192.16,207.8 197.83,205.9 203.5,204 203.5,201.5 203.5,199 203.5,196.5 209.5,196.5 215.5,196.5 221.5,196.5 221.5,199.16 221.5,201.83 221.5,204.5 226.16,204.5 230.83,204.5 235.5,204.5 235.5,202.16 235.5,199.83 235.5,197.5 241.5,197.5 247.5,197.5 253.5,197.5 253.5,200.16 253.5,202.83 253.5,205.5 257.16,205.5 260.83,205.5 264.5,205.5 264.5,202.5 264.5,199.5 264.5,196.5 269.16,196.5 273.83,196.5 278.5,196.5 278.5,200 278.5,203.5 278.5,207 282.83,210.33 287.16,213.66 291.5,217 291.5,212.33 291.5,207.66 291.5,203 295.83,206 300.16,209 304.5,212 304.5,217.43 304.5,222.86 304.5,228.3 308.5,230.86 312.5,233.43 316.5,236 316.5,230.56 316.5,225.13 316.5,219.7 323.83,225.13 331.16,230.56 338.5,236 338.5,240.63 338.5,245.26 338.5,249.9 335.03,249.83 331.56,249.76 328.1,249.7 327.4,251.3 326.7,252.9 326,254.5 338.76,254.5 351.53,254.5 364.3,254.5 365.86,261.5 367.43,268.5 369,275.5 350.1,275.5 331.2,275.5 312.3,275.5 311.2,277.5 310.1,279.5 309,281.5 330.33,281.5 351.66,281.5 373,281.5 375.9,291.2 378.8,300.9 381.7,310.6 349.23,310.06 316.76,309.53 284.3,309 297.86,289.23 311.43,269.46 325,249.7 340.1,249.9 355.2,250.1 370.3,250.3 384.96,303.43 399.63,356.56 414.3,409.7 344.76,408.56 275.23,407.43 205.7,406.3 243.9,353.86 282.1,301.43 320.3,249 304.53,239.5 288.76,230 273,220.5 250.1,220.5 227.2,220.5 204.3,220.5 183.43,228.73 162.56,236.96 141.69,245.2 89.69,289.8 37.69,334.4 -14.3,379 -10.96,347 -7.63,315 -4.3,283 18.29,267.66 40.9,252.33 63.5,237 63.5,181.66 63.5,126.33 63.5,71 49.16,68.66 34.83,66.33 20.5,64 20.5,67.33 20.5,70.66 20.5,74 15.5,73.23 10.5,72.46 5.5,71.7 5.5,86.13 5.5,100.56 5.5,115 13.83,113.66 22.16,112.33 30.5,111 30.5,105 30.5,99 30.5,93 30.5,87.33 30.5,81.66 30.5,76 28.2,75.43 25.9,74.86 23.6,74.3 7.56,72.96 -8.46,71.63 -24.5,70.3 -24.5,188.53 -24.5,306.76 -24.5,425 139.1,422.33 302.7,419.66 466.3,417 455.63,295.43 444.96,173.86 434.3,52.3 406.3,52.53 378.3,52.76 350.3,53 350.56,85.9 350.83,118.8 351.1,151.69 344.9,154.36 338.7,157.03 332.5,159.69 332.5,168.8 332.5,177.9 332.5,187 338.5,186.76 344.5,186.53 350.5,186.3 350.5,206.36 350.5,226.43 350.5,246.5 371,246.5 391.5,246.5 412,246.5 412.1,166.5 412.2,86.5 412.3,6.5 406.2,6.5 400.1,6.5 394,6.5 379.23,20.43 364.46,34.36 349.7,48.3 369.03,48.1 388.36,47.9 407.7,47.7 ","M44,320 C44,311.73 44,303.46 44,295.2 44,286.93 44,278.66 44,270.4 44,262.13 44,253.86 44,245.6 44,237.33 44,229.06 44,220.8 44,212.53 44,204.26 44,196 44,187.73 44,179.46 44,171.2 44,162.93 44,154.66 44,146.4 44,138.13 44,129.86 44,121.6 44,113.33 44,105.06 44,96.8 44,88.53 44,80.26 44,72 54.6,72 65.2,72 75.8,72 86.4,72 96.99,72 107.59,72 118.19,72 128.79,72 139.39,72 149.99,72 160.59,72 171.19,72 181.79,72 192.39,72 202.99,72 213.59,72 224.2,72 234.8,72 245.4,72 256,72 266.6,72 277.2,72 287.8,72 298.4,72 309,72 319.6,72 330.2,72 340.8,72 351.4,72 362,72 362,80.26 362,88.53 362,96.8 362,105.06 362,113.33 362,121.6 362,129.86 362,138.13 362,146.39 362,154.66 362,162.93 362,171.2 362,179.46 362,187.73 362,196 362,204.26 362,212.53 362,220.79 362,229.06 362,237.33 362,245.59 362,253.86 362,262.13 362,270.39 362,278.66 362,286.93 362,295.19 362,303.46 362,311.73 362,320 352.36,320 342.72,320 333.09,320 323.45,320 313.81,320 304.18,320 294.54,320 284.9,320 275.27,320 265.63,320 256,320 246.36,320 236.72,320 227.09,320 217.45,320 207.81,320 198.18,320 188.54,320 178.9,320 169.27,320 159.63,320 150,320 140.36,320 130.72,320 121.09,320 111.45,320 101.81,320 92.18,320 82.54,320 72.9,320 63.27,320 53.63,320 44,320 46.1,320 48.2,320 50.3,320 52.4,320 54.5,320 56.59,320 58.69,320 60.79,320 62.89,320 64.99,320 67.09,320 69.19,320 71.29,320 73.39,320 75.49,320 77.59,320 79.69,320 81.79,320 83.89,320 85.99,320 88.09,320 90.19,320 92.29,320 94.4,320 96.5,320 98.6,320 100.69,320 102.8,320 104.9,320 107,320 107.2,317.02 107.06,313.84 106.65,310.49 106.24,307.14 105.56,303.63 104.65,300 103.75,296.38 102.62,292.64 101.33,288.84 100.04,285.05 98.59,281.19 97.03,277.33 95.47,273.46 93.81,269.59 92.1,265.77 90.38,261.95 88.61,258.17 86.86,254.48 85.1,250.8 83.35,247.21 81.66,243.78 79.97,240.34 78.34,237.05 76.84,233.97 75.33,230.88 73.95,228 72.74,225.37 71.53,222.74 70.5,220.37 69.7,218.3 68.97,216.41 68.89,214.2 69.32,211.69 69.76,209.17 70.73,206.35 72.09,203.26 73.45,200.17 75.21,196.8 77.25,193.18 79.29,189.56 81.61,185.69 84.09,181.59 86.56,177.5 89.19,173.18 91.85,168.67 94.52,164.16 97.21,159.45 99.82,154.57 102.43,149.69 104.95,144.64 107.25,139.45 109.56,134.26 111.66,128.93 113.42,123.47 115.19,118.02 116.62,112.46 117.59,106.8 118.57,101.14 119.08,95.4 119.03,89.59 118.97,83.78 118.33,77.9 117,72 121.47,72 126.78,72 132.73,72 138.68,72 145.26,72 152.26,72 159.25,72 166.67,72 174.29,72 181.91,72 189.74,72 197.55,72 205.37,72 213.18,72 220.76,72 228.34,72 235.7,72 242.62,72 249.54,72 256.03,72 261.86,72 267.69,72 272.87,72 277.19,72 281.51,72 284.96,72 287.33,72 289.7,72 291,72 291,72 290.2,77.5 289.95,82.73 290.17,87.73 290.38,92.73 291.05,97.51 292.07,102.11 293.08,106.7 294.45,111.12 296.05,115.39 297.66,119.67 299.51,123.81 301.49,127.85 303.48,131.89 305.6,135.84 307.75,139.74 309.9,143.64 312.08,147.49 314.18,151.34 316.28,155.18 318.31,159.02 320.16,162.9 322,166.77 323.67,170.69 325.04,174.68 326.42,178.68 327.51,182.76 328.2,186.96 328.9,191.17 329.2,195.5 329,200 328.81,204.09 328.26,207.8 327.41,211.23 326.56,214.65 325.41,217.8 324.02,220.74 322.64,223.69 321.02,226.44 319.24,229.09 317.46,231.74 315.51,234.29 313.48,236.83 311.44,239.37 309.3,241.89 307.14,244.5 304.99,247.11 302.8,249.8 300.66,252.66 298.51,255.52 296.41,258.55 294.43,261.85 292.44,265.15 290.56,268.71 288.86,272.63 287.16,276.55 285.65,280.82 284.38,285.55 283.11,290.27 282.09,295.44 281.38,301.15 280.68,306.86 280.3,313.11 280.3,320 "]}}, "venice"+shapeHoldTime)
			     .fromTo(".detail",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"venice")
			     .fromTo(".water",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"venice+="+rooftopBuffer);
	}

	function addTrain(tl) {
		var rooftopBuffer = .5;
		return tl.addLabel("train", "venice"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#elevator", precompile:["M44,320 C44,237.33 44,154.66 44,72 150,72 256,72 362,72 362,154.66 362,237.33 362,320 256,320 150,320 44,320 65,320 86,320 107,320 109,290.3 77.7,239 69.7,218.3 61.7,197.6 131.69,137 117,72 161.69,72 291,72 291,72 283,127 331,155 329,200 327,245 280.3,244.3 280.3,320 ","M321,300.7 C285.11,300.7 249.23,300.7 213.35,300.7 177.46,300.7 141.58,300.7 105.7,300.7 105.7,259.75 105.7,218.8 105.7,177.85 105.7,136.9 105.7,95.95 105.7,55 123.63,55 141.56,55 159.5,55 177.43,55 195.36,55 213.3,55 231.25,55 249.2,55 267.15,55 285.1,55 303.05,55 321,55 321,95.94 321,136.89 321,177.84 321,218.8 321,259.75 321,300.7 "]}}, "train"+shapeHoldTime)
			     .fromTo(".train_detail",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 0% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"train")
			     .fromTo(".train_water",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"train+="+rooftopBuffer);
	}

	function addElevator(tl) {
		var rooftopBuffer = .5;
		return tl.addLabel("elevator", "train"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#trash", precompile:["M213.3,55 C177.43,55 141.56,55 105.7,55 105.7,136.9 105.7,218.8 105.7,300.7 177.46,300.7 249.23,300.7 321,300.7 321,259.75 321,218.8 321,177.84 321,136.89 321,95.94 321,55 285.1,55 249.2,55 213.3,55 z","M87,118.2 C83.5,123.1 93,123.7 93,123.7 93,138.4 93,313 93,313 221,382.3 308,313 308,313 308,266.3 308,124 308,124 315,124 312.7,118.2 312.7,118.2 284,96.3 101.3,98 87,118.2 z"]}}, "elevator"+shapeHoldTime)
			     .fromTo(".e_detail",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 0% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"elevator");
	}

	function addTrash(tl) {
		return tl.addLabel("trash", "elevator"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#plane", precompile:["M93,123.7 C93,123.7 91.94,123.63 90.66,123.36 89.38,123.09 87.88,122.61 87,121.8 86.11,120.98 85.83,119.83 87,118.2 87,118.2 87,118.2 87,118.2 91.76,111.46 115.24,106.78 145.49,104.35 175.74,101.92 212.75,101.73 244.6,103.97 276.45,106.22 303.13,110.9 312.7,118.2 312.7,118.2 312.95,118.84 313.03,119.7 313.11,120.56 313.02,121.63 312.32,122.49 311.63,123.35 310.33,124 308,124 308,124 308,139.81 308,162.62 308,185.43 308,215.24 308,243.24 308,271.24 308,297.43 308,313 308,313 298.33,320.7 280.7,328.4 263.07,336.1 237.48,343.8 205.62,343.8 173.77,343.8 135.66,336.1 93,313 93,313 93,293.6 93,267.18 93,240.77 93,207.35 93,179.31 93,151.26 93,128.6 93,123.7 z","M17,200.8 C20.5,198.8 24.1,196.9 27.6,194.9 27.6,194.9 28,172.1 30,170.5 32,172.5 31.6,194.5 31.6,194.5 35.1,194.5 67.8,189.4 76.9,190.2 86,190.99 95.4,174.89 110.3,170.5 125.3,166.2 195.7,170.1 211,177.2 226.3,184.3 305.8,196.89 305.8,196.89 305.8,196.89 331,201.99 336.9,190.2 342.8,178.4 353.4,147.29 355.8,146.1 369.2,143 382.6,144.5 382.6,144.5 382.6,144.5 373.5,204.7 368,209 362.5,213.3 371.9,222 328.3,220.8 284.6,219.6 204.3,240.9 204.3,240.9 174,246 88.3,242.9 82.7,240.9 77.1,238.9 47.7,228.7 42.2,224.8 36.7,220.9 31.2,208.7 31.2,208.7 28.8,216.2 22.9,224.4 22.9,224.4 22.1,217.3 26,206.7 26,206.7 23,204.7 20,202.8 17,200.8 z"]}}, "trash"+shapeHoldTime)
			     .fromTo(".trash_detail",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 0% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"trash");
	}

	function addPlane(tl){
		var rooftopBuffer = .5;
		return tl.addLabel("plane", "trash"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#death_star", precompile:["M382.6,144.5 C382.6,144.5 373.5,204.7 368,209 362.5,213.3 371.9,222 328.3,220.8 284.6,219.6 204.3,240.9 204.3,240.9 174,246 88.3,242.9 82.7,240.9 77.1,238.9 47.7,228.7 42.2,224.8 36.7,220.9 31.2,208.7 31.2,208.7 28.8,216.2 22.9,224.4 22.9,224.4 22.1,217.3 26,206.7 26,206.7 23,204.7 20,202.8 17,200.8 20.5,198.8 24.1,196.9 27.6,194.9 27.6,194.9 28,172.1 30,170.5 32,172.5 31.6,194.5 31.6,194.5 35.1,194.5 67.8,189.4 76.9,190.2 86,190.99 95.4,174.89 110.3,170.5 125.3,166.2 195.7,170.1 211,177.2 226.3,184.3 305.8,196.89 305.8,196.89 305.8,196.89 331,201.99 336.9,190.2 342.8,178.4 353.4,147.29 355.8,146.1 369.2,143 382.6,144.5 382.6,144.5 z","M377.4,199.8 C377.4,224.26 372.44,247.57 363.47,268.77 354.5,289.97 341.53,309.06 325.49,325.09 309.46,341.13 290.37,354.1 269.17,363.07 247.97,372.04 224.66,377 200.2,377 180.62,377 161.79,373.82 144.19,367.96 126.58,362.1 110.21,353.55 95.54,342.81 80.88,332.06 67.93,319.11 57.18,304.45 46.44,289.78 37.89,273.41 32.03,255.8 26.17,238.2 23,219.37 23,199.8 23,180.22 26.17,161.39 32.03,143.79 37.89,126.18 46.44,109.81 57.18,95.14 67.93,80.48 80.88,67.53 95.54,56.78 110.21,46.04 126.58,37.49 144.19,31.63 161.79,25.77 180.62,22.6 200.2,22.6 219.77,22.6 238.6,25.77 256.2,31.63 273.81,37.49 290.18,46.04 304.85,56.78 319.51,67.53 332.46,80.48 343.21,95.14 353.95,109.81 362.5,126.18 368.36,143.79 374.22,161.39 377.4,180.22 377.4,199.8 z"]}}, "plane"+shapeHoldTime)
			     .fromTo(".plane_detail",shapeMorphTime, {opacity: 0, rotationX: 90, transformOrigin: "0% 0% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime, yoyo: true},
									"plane")
			     .fromTo(".wind",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"plane+="+rooftopBuffer);
	}

	function addDeathStar(tl){
		var rooftopBuffer = .5;
		return tl.addLabel("death_star", "plane"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#camping", precompile:["M23,199.8 C23,248.73 42.83,293.03 74.9,325.09 106.96,357.16 151.26,377 200.2,377 298.06,377 377.4,297.66 377.4,199.8 377.4,150.86 357.56,106.56 325.49,74.5 293.43,42.43 249.13,22.6 200.2,22.6 151.26,22.6 106.96,42.43 74.9,74.5 42.83,106.56 23,150.86 23,199.8 z","M54.5,231 C69.8,207.6 146.4,93.69 208.5,108 259,119.7 331.2,223.3 346,231 346.2,231.1 347.1,231.6 347.1,232.1 346.7,237.1 260,234.5 260,234.5 260,212 234.5,167.5 204.5,166.5 174.5,165.5 152.5,180.9 137,235.2 122,237.5 54.5,231 54.5,231 z"]}}, "death_star"+shapeHoldTime)
			     .fromTo(".ds_detail",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"death_star+="+rooftopBuffer);
	}

	function addCamping(tl){
		var rooftopBuffer = .5;
		return tl.addLabel("camping", "death_star"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#dogmeat", precompile:["M204.5,166.5 C189.5,166 176.5,169.6 165.31,180.11 154.12,190.62 144.75,208.05 137,235.2 132,235.96 121.16,235.75 108.94,235.13 96.72,234.51 83.11,233.47 72.55,232.6 62,231.72 54.5,231 54.5,231 62.15,219.3 85.12,184.97 113.94,155.36 142.77,125.74 177.45,100.85 208.5,108 233.75,113.85 264.42,142.67 290.63,171 316.85,199.32 338.6,227.15 346,231 346.1,231.05 346.37,231.2 346.62,231.39 346.87,231.6 347.1,231.85 347.1,232.1 346.96,233.76 337.24,234.58 324.34,234.94 311.43,235.3 295.35,235.18 282.49,234.98 269.63,234.78 260,234.5 260,234.5 260,223.25 253.62,206.5 243.5,192.43 233.37,178.37 219.5,167 204.5,166.5 ","M97.4,70 C94.5,80.7 90.2,101.9 95.7,127.7 100.5,150.3 110.6,166.4 117,175 124.4,169.9 144.4,154.8 147.3,130.19 147.6,127.6 148.4,124.69 147.5,120.99 142.5,100.49 98.5,67.49 98.5,67.49 98.5,67.49 96,63.49 98.5,59.99 118,62.99 145,105.99 157,120.99 171.5,111.49 241,116.49 248,119.99 255,123.49 284.5,66.49 295.5,66.49 306.5,66.49 303.5,68.49 303.5,68.49 296.39,74.99 286.3,84.89 275.7,98.29 265.6,111 260.5,117.5 259,125 254.1,149.19 282.5,173 288.3,177.7 298.8,151.5 302,130.1 303,114.99 303.89,100.59 303.89,71.99 303.89,71.99 303.89,71.99 303.89,71.99 303.89,71.99 "]}}, "camping"+shapeHoldTime)
			     .fromTo(".c_details",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"camping+="+rooftopBuffer);
	}

	function addDogmeat(tl){
		var rooftopBuffer = .5;
		return tl.addLabel("dogmeat", "camping"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {morphSVG: {shape:"#heart", precompile:["M97.4,70 C94.5,80.7 90.2,101.9 95.7,127.7 100.5,150.3 110.6,166.4 117,175 124.4,169.9 144.4,154.8 147.3,130.19 147.6,127.6 148.4,124.69 147.5,120.99 142.5,100.49 98.5,67.49 98.5,67.49 98.5,67.49 96,63.49 98.5,59.99 118,62.99 145,105.99 157,120.99 171.5,111.49 241,116.49 248,119.99 255,123.49 284.5,66.49 295.5,66.49 306.5,66.49 303.5,68.49 303.5,68.49 296.39,74.99 286.3,84.89 275.7,98.29 265.6,111 260.5,117.5 259,125 254.1,149.19 282.5,173 288.3,177.7 298.8,151.5 302,130.1 303,114.99 303.89,100.59 303.89,71.99 303.89,71.99 303.89,71.99 303.89,71.99 303.89,71.99 ","M199.1,290.3 C199.1,290.3 223.35,275.8 250.6,256.13 277.85,236.47 308.1,211.65 320.1,191 332.1,170.35 329.1,144.05 319.51,122.66 309.92,101.27 293.75,84.8 279.4,83.8 265.05,82.8 251.37,83.75 238.08,91.57 224.8,99.4 211.9,114.1 199.1,140.6 199.2,140.6 199.3,140.6 199.4,140.6 199.5,140.6 199.6,140.6 199.7,140.6 199.8,140.6 199.9,140.6 200,140.6 187.15,114.1 174.22,99.4 160.93,91.57 147.65,83.75 134,82.8 119.7,83.8 105.4,84.8 89.22,101.27 79.62,122.66 70.02,144.05 67,170.35 79,191 87,204.76 103.11,220.38 121.03,235.1 138.96,249.81 158.7,263.61 173.96,273.73 189.22,283.85 200,290.3 200,290.3 "]}}, "dogmeat"+shapeHoldTime)
			     .fromTo(".dm_details",shapeMorphTime, {opacity: 0, rotationX: 90, rotationY: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, rotationY: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 3 *shapeMorphTime - rooftopBuffer, yoyo: true},
									"dogmeat+="+rooftopBuffer);
	}

	function addHeart(tl){
		return tl.addLabel("heart", "dogmeat"+shapeHoldTime)
			     .to("#start", shapeMorphTime, {opacity: 0}, "heart"+shapeHoldTime)
	}

	function beginSlideShow(){
		
		var tl = new TimelineLite();
		tl.delay(11);
		tl.staggerFromTo($memories, //object
									rollInSpeed, //duration of animation
									{opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:memoryDuration - 2 *rollInSpeed, yoyo: true}, //vars
									{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:memoryDuration - 2 *rollInSpeed, yoyo: true},
									memoryDuration, //stagger wait
									showReplayButton); 

		var artTimeLine = new TimelineLite();
		artTimeLine.delay(10);
		artTimeLine.to("#svgContainer", 1, {opacity: 1});
		addFirstDate(artTimeLine);
		addApartment(artTimeLine);
		addFort(artTimeLine);
		addMoon(artTimeLine);
		addDancing(artTimeLine);
		addVenice(artTimeLine);
		addTrain(artTimeLine);
		addElevator(artTimeLine);
		addTrash(artTimeLine);
		addPlane(artTimeLine);
		addDeathStar(artTimeLine);
		addCamping(artTimeLine);
		addDogmeat(artTimeLine);
		addHeart(artTimeLine);
	}

	function showReplayButton(){
		
	}

	function playSong(){
		audio.play();
	};

	var appendQuoteDivs = function(phrases){
		_.each(phrases, function(phrase){
			var divString = '<div class="quote" style="opacity:0; top:'+height/3+';">'+phrase+'</div>';
			$('body').append(divString);
		});

		
	};
	appendQuoteDivs(phrases);

	var appendMemoryDivs = function(memories){
		_.each(memories, function(memory){
			var divString = '<div class="memory" style="opacity:0; top:'+height/5+';">'+memory+'</div>';
			$('body').append(divString);
		});

		$('#svgContainer').css({'top': height/2, 'opacity':0});

	}
	appendMemoryDivs(memories);

	var $quotes = $(".quote");
	var $memories = $(".memory");

	document.body.addEventListener('touchend', function(e){
		if(!touched){
	        $("#banner").css("display", "none"); 
	        beginPoem();
	        TweenMax.fromTo('#banner',
			rollInSpeed,
			{opacity: 1, rotationX: 0, ease:Expo.easeOut},
			{opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut});
			touched = true;
    	}
    }, false);

    document.body.onclick = function(e){
    	if(!touched){
	        $("#banner").css("display", "none"); 
	        beginPoem();
	        TweenMax.fromTo('#banner',
			rollInSpeed,
			{opacity: 1, rotationX: 0, ease:Expo.easeOut},
			{opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut});
			touched = true;
    	}
    }

    var divString = '<div id="banner" style="opacity:0; top:'+height/3+';"> Touch to Begin </div>';
	$('body').append(divString);
	TweenMax.fromTo('#banner',
		rollInSpeed,
		{opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut},
		{opacity: 1, rotationX: 0, ease:Expo.easeOut});

	function beginPoem(){
		TweenMax.staggerFromTo($quotes, //object
			rollInSpeed, //duration
			{opacity: 0, rotationX: 90, transformOrigin: "0% 100% -50", ease:Expo.easeOut, repeat: 1, repeatDelay:duration, yoyo: true}, //vars
			{opacity: 1, rotationX: 0, ease:Expo.easeOut,  repeat: 1, repeatDelay:duration, yoyo: true},
			rollInSpeed*2 + duration,
			playSong); //staggerwait
	}
}())